# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddGameToCollectionDTO {
  collectionId: Float!
  hltbGameId: Float!
}

type AuthUserVerification {
  authorized: Boolean!
}

"""Single Collection"""
type CollectionDTO {
  counter: Float!
  description: String!
  id: ID!
  name: String!
}

"""Collection Mutation success"""
type CollectionMutationResponseDTO {
  success: Boolean!
}

"""Single Collection with added items"""
type CollectionWithGamesDTO {
  description: String!
  games: [GameWithCoversDTO!]!
  id: Float!
  name: String!
}

type Cover {
  big_url: String!
  medium_url: String!
  small_url: String!
}

"""Single Cover"""
type CoverDTO {
  bigUrl: String!
  id: Float!
  mediumUrl: String!
  smallUrl: String!
}

"""Single Game Release(Year) Date"""
type GameReleaseDTO {
  date: Float
  id: Float!
}

"""GameStatus Enum"""
enum GameStatus {
  COMPLETED
  IN_PROGRESS
  RETIRED
}

"""GameStatus CompletedIn Arg"""
input GameStatusCompletedInArgDTO {
  hours: String
  minutes: String
  seconds: String
}

"""GameStatus CompletedIn"""
type GameStatusCompletedInDTO {
  hours: Float
  minutes: Float
  seconds: Float
}

"""GameStatus Success Response"""
type GameStatusSuccessResponseDTO {
  message: String!
}

"""Game with all linked data"""
type GameWithAllDataDTO {
  cover: CoverDTO
  genres: [GenresDto!]!
  hltbId: Float!
  id: Float!
  name: String!
  platforms: [PlatformDTO!]!
  releases: GameReleaseDTO
  slug: String!
}

"""Single Game with covers"""
type GameWithCoversDTO {
  cover: CoverDTO
  hltbId: Float!
  id: Float!
  name: String!
  slug: String!
}

"""Single Platform"""
type GenresDto {
  id: Float!
  name: String!
  slug: String!
}

type Mutation {
  addGameToCollection(collection: AddGameToCollectionDTO!): CollectionMutationResponseDTO!
  createNewCollection(collection: NewCollectionDTO!): CollectionDTO!
  removeCollection(collection: RemoveCollectionArgsDTO!): RemovedCollectionResponseDTO!
  updateProfileInfo(profileInfo: ProfileInfoUpdateArgsDTO!): ProfileInfoUpdateResponseDTO!
  upsertGameStatus(upsertGameStatusArgs: UpsertGameStatusArgsDTO!): GameStatusSuccessResponseDTO!
}

"""New Collection"""
input NewCollectionDTO {
  description: String!
  name: String!
}

"""Single Platform"""
type PlatformDTO {
  id: Float!
  name: String!
  slug: String!
}

"""User profile info"""
type ProfileInfoDTO {
  """User's avatar URL from Cloudinary"""
  avatarUrl: String!
  id: Float!
  name: String!
}

"""User profile info required to update profile"""
input ProfileInfoUpdateArgsDTO {
  """User's avatar URL from Cloudinary"""
  avatarUrl: String!
  name: String!
}

"""Response for updating profile info"""
type ProfileInfoUpdateResponseDTO {
  success: Boolean!
}

type Query {
  collection(id: Float!): CollectionWithGamesDTO!
  game(hltbId: Float!): GameWithAllDataDTO!
  getProfileCollections: [CollectionDTO!]!
  profileInfo: ProfileInfoDTO!
  search(input: String!): SearchResult!
  userGameStatus(gameStatusId: Float!): UserGamesStatusResponseDTO!
  userGamesStatus: [UserGamesStatusResponseDTO!]!
  verify: AuthUserVerification!
}

"""Required arguments to remove a collection"""
input RemoveCollectionArgsDTO {
  collectionId: Float!
}

"""Collection removed"""
type RemovedCollectionResponseDTO {
  success: Boolean!
}

"""Search Games Result"""
type SearchGamesResult {
  cover: Cover!
  id: Float!
  name: String!
}

"""Search result"""
type SearchResult {
  games: [SearchGamesResult!]!
}

input UpsertGameStatusArgsDTO {
  achievementsCompleted: Boolean!
  completedIn: GameStatusCompletedInArgDTO!
  gameId: Float!
  gameStatus: GameStatus!
  gamesStatusId: Float
  isEditing: Boolean!
  platformId: Float!
  score: String
}

"""UserGamesStatus Response"""
type UserGamesStatusResponseDTO {
  achievementsCompleted: Boolean!
  completedIn: GameStatusCompletedInDTO
  game: GameWithAllDataDTO!
  id: Float!
  platform: PlatformDTO!
  review: String
  score: String
  status: GameStatus!
}