# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthUserVerification {
  authorized: Boolean!
}

"""Single Collection"""
type CollectionDTO {
  counter: Float!
  description: String!
  id: ID!
  name: String!
}

"""Single Collection with added items"""
type CollectionWithGamesDTO {
  description: String!
  games: [GameWithCoversDTO!]!
  id: ID!
  name: String!
}

type Cover {
  big_url: String!
  medium_url: String!
  small_url: String!
}

"""Single Cover"""
type CoverDTO {
  id: Float!
  largeUrl: String!
  mediumUrl: String!
  smallUrl: String!
}

"""Single Game with covers"""
type GameWithCoversDTO {
  covers: [CoverDTO!]!
  hltbId: String!
  id: Float!
  name: String!
  slug: String!
}

type Mutation {
  createNewCollection(collection: NewCollectionDTO!): CollectionDTO!
  removeCollection(collection: RemoveCollectionArgsDTO!): RemovedCollectionResponseDTO!
  updateProfileInfo(profileInfo: ProfileInfoUpdateArgsDTO!): ProfileInfoUpdateResponseDTO!
}

"""New Collection"""
input NewCollectionDTO {
  description: String!
  name: String!
}

"""User profile info"""
type ProfileInfoDTO {
  """User's avatar URL from Cloudinary"""
  avatarUrl: String!
  name: String!
}

"""User profile info required to update profile"""
input ProfileInfoUpdateArgsDTO {
  """User's avatar URL from Cloudinary"""
  avatarUrl: String!
  name: String!
}

"""Response for updating profile info"""
type ProfileInfoUpdateResponseDTO {
  success: Boolean!
}

type Query {
  collection(id: Float!): CollectionWithGamesDTO!
  getProfileCollections: [CollectionDTO!]!
  profileInfo: ProfileInfoDTO!
  search(input: String!): SearchResult!
  verify: AuthUserVerification!
}

"""Required arguments to remove a collection"""
input RemoveCollectionArgsDTO {
  collectionId: Float!
}

"""Collection removed"""
type RemovedCollectionResponseDTO {
  success: Boolean!
}

"""Search Games Result"""
type SearchGamesResult {
  cover: Cover!
  id: Float!
  name: String!
}

"""Search result"""
type SearchResult {
  games: [SearchGamesResult!]!
}